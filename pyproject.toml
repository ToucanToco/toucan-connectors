[tool.poetry]
name = "toucan-connectors"
version = "7.4.0"
description = "Toucan Toco Connectors"
authors = ["Toucan Toco <dev@toucantoco.com>"]
license = "BSD"
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.11,<3.13"

cached-property = ">=1.5.2,<3.0.0"
Jinja2 = "^3.0.3"
pydantic = "^2.4.2"
requests = "^2.28.0"

# Dependencies for extras
Authlib = { version = "^1.3.2", optional = true }
awswrangler = { version = "^3.3.0", optional = true }
clickhouse-driver = { version = ">=0.2.3,<1.0", optional = true }
cx-Oracle = { version = "^8.3.0", optional = true }
dataiku-api-client = { version = ">=9.0.1,<14.0.0", optional = true }
elasticsearch = { version = ">=7.11.0,<8", optional = true }
google-api-python-client = { version = "^2", optional = true }
google-cloud-bigquery = { version = ">=3,<4", extras = [
    "bqstorage",
    "pandas",
], optional = true }
hubspot-api-client = { version = ">=7.4,<12.0", optional = true }
jq = { version = "^1.2.2", optional = true }
lxml = { version = ">=4.6.5,<6.0.0", optional = true }
oauth2client = { version = "^4.1.3", optional = true }
oauthlib = { version = "3.2.2", optional = true }
pandas = [
    { version = "<2", python = "<3.12", optional = true },
    { version = ">=2", python = ">=3.12", optional = true },
]
peakina = { version = ">=0.11", optional = true }
psycopg2 = { version = "^2.7.4", optional = true }
pyarrow = { version = "*", optional = true }
pyhdb = { version = ">=0.3.4,<1.0", optional = true }
PyJWT = { version = ">=1.5.3,<3", optional = true }
pymongo = { version = ">=3.12.0", optional = true }
PyMySQL = { version = "^1.1.1", optional = true }
pyodbc = { version = ">=4,<6", optional = true }
python-graphql-client = { version = ">=0.4.3,<1.0", optional = true }
python-slugify = { version = ">=5.0.2", optional = true }
redshift-connector = { version = "^2.0.907", optional = true }
requests-oauthlib = { version = "2.0.0", optional = true }
simplejson = { version = "^3.17.6", optional = true }
snowflake-connector-python = { version = ">=2.7.12,<4.0.0", optional = true }
sqlalchemy = { version = "^2", optional = true }
tctc-odata = { version = ">=0.3,<1.0", optional = true }
tenacity = { version = ">=8.0.1,<10.0.0", optional = true }
xmltodict = { version = ">=0.13.0,<1.0", optional = true }
zeep = { version = "^4.1.0", optional = true }


[tool.poetry.dev-dependencies]
click = "^8.1.7"
cryptography = ">=40.0.2"
docker = "^7.1.0"
mock = "^5.1.0"
mypy = "^1.13"
pandas-stubs = "^2.2.3.241126"
pytest = "^8.3.4"
pytest-asyncio = ">=0.19.0,<1"
pytest-cov = "^6.0.0"
pytest-mock = "^3.14.0"
pytest-rerunfailures = "^15.0"
python-graphql-client = ">=0.4.3,<1"
PyYAML = ">=6.0.1,<7"
responses = ">=0.21.0,<1"
types-pyopenssl = "^24.1.0.20240722"
types-python-slugify = "^8.0.2.20240310"
types-requests = "^2.31.0.6"
types-simplejson = "^3.19.0.20240801"
types-pymysql = "^1.1.0.20241103"

[tool.poetry.extras]
awsathena = ["awswrangler", "pandas"]
azure_mssql = ["pyodbc", "pandas", "sqlalchemy"]
base = ["Authlib", "jq", "pandas", "python-slugify", "tenacity", "pandas"]
clickhouse = ["clickhouse-driver", "pandas", "sqlalchemy"]
dataiku = ["dataiku-api-client", "pandas"]
elasticsearch = ["elasticsearch", "pandas"]
github = ["python-graphql-client", "pandas"]
google_analytics = ["google-api-python-client", "oauth2client", "pandas"]
google_big_query = ["google-cloud-bigquery", "pandas"]
google_cloud_mysql = ["PyMySQL", "pandas", "sqlalchemy"]
google_sheets = ["google-api-python-client", "pandas"]
http_api = ["oauthlib", "requests-oauthlib", "xmltodict", "pandas"]
hubspot = ["hubspot-api-client", "pandas"]
mongo = ["pymongo", "pandas"]
mssql = ["pyodbc", "pandas", "sqlalchemy"]
mssql_TLSv1_0 = ["pyodbc", "pandas"]
mysql = ["PyMySQL", "pandas", "sqlalchemy"]
odata = ["oauthlib", "requests-oauthlib", "tctc_odata", "pandas"]
odbc = ["pydobc", "pandas"]
oracle_sql = ["cx_Oracle", "pandas", "sqlalchemy"]
peakina = ["peakina", "pandas"]
postgres = ["psycopg2", "pandas", "sqlalchemy"]
Redshift = ["redshift_connector", "lxml", "pandas"]
sap_hana = ["pyhdb", "pandas", "sqlalchemy"]
snowflake = ["snowflake-connector-python", "PyJWT", "pyarrow", "pandas"]
soap = ["zeep", "lxml", "pandas"]

# All
all = [
    "Authlib",
    "awswrangler",
    "clickhouse-driver",
    "cx-Oracle",
    "dataiku-api-client",
    "elasticsearch",
    "google-api-python-client",
    "google-cloud-bigquery",
    "hubspot-api-client",
    "jq",
    "lxml",
    "oauth2client",
    "oauthlib",
    "openpyxl",
    "pandas",
    "peakina",
    "psycopg2",
    "pyarrow",
    "pyhdb",
    "PyJWT",
    "pymongo",
    "PyMySQL",
    "pyodbc",
    "python-graphql-client",
    "python-slugify",
    "redshift-connector",
    "requests-oauthlib",
    "simplejson",
    "snowflake-connector-python",
    "sqlalchemy",
    "tctc-odata",
    "tenacity",
    "xmltodict",
    "zeep",
]

[tool.poetry.group.dev.dependencies]
ruff = ">=0.6.1,<0.9.0"
pre-commit = ">=3.6,<5.0"
types-oauthlib = "^3.2.0.20240217"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
python_version = "3.11"
plugins = "pydantic.mypy"
follow_imports = "silent"
show_error_codes = true
warn_no_return = true
warn_unused_configs = true
warn_unused_ignores = true
ignore_missing_imports = true
files = [
    "toucan_connectors/auth.py",
    "toucan_connectors/awsathena/awsathena_connector.py",
    "toucan_connectors/azure_mssql/azure_mssql_connector.py",
    "toucan_connectors/common.py",
    "toucan_connectors/google_big_query/google_big_query_connector.py",
    "toucan_connectors/hubspot_private_app/hubspot_connector.py",
    "toucan_connectors/mongo/mongo_connector.py",
    "toucan_connectors/mysql/mysql_connector.py",
    "toucan_connectors/peakina/peakina_connector.py",
    "toucan_connectors/postgres/postgresql_connector.py",
    "toucan_connectors/redshift/redshift_database_connector.py",
    "toucan_connectors/snowflake/snowflake_connector.py",
    "toucan_connectors/snowflake_oauth2/snowflake_oauth2_connector.py",
    "toucan_connectors/toucan_connector.py",
]

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = ["E", "F", "UP", "N", "C", "B", "I001", "S", "Q"]
ignore = [
    "S101", # allow use of assert
    # FIXME: S105, S106, S608 and S113 should be addressed
    "S105",
    "S106", # possible hardcoded password
    "S608", # possible SQL injection
    "S113", # requests call without timeout
    "N801", # class names
    "N802", # function names
    "N818", # exception names
    "B017", # pytest.raises(Exception)
    "C901", # complexity
]
